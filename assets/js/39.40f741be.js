(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{401:function(t,a,r){"use strict";r.r(a);var s=r(26),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),r("p",[t._v("git 常用命令大部分是基于三大分区来执行的。先来了解一些专有名词吧。")]),t._v(" "),r("ul",[r("li",[t._v("工作区，也叫 Working Directory")]),t._v(" "),r("li",[t._v("暂存区，也叫 stage，index")]),t._v(" "),r("li",[t._v("版本库，也叫本地仓库，commit History")])]),t._v(" "),r("p",[t._v("当我们建立一个 git 仓库就有了这三个概念。")]),t._v(" "),r("h2",{attrs:{id:"工作区"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#工作区"}},[t._v("#")]),t._v(" 工作区")]),t._v(" "),r("p",[t._v("显而易见，工作区就是我们平时编辑代码的区域。对于一些新增或编辑过的文件，如果没有被 add 添加到暂存区就会以红色形式显示在工作区。")]),t._v(" "),r("h2",{attrs:{id:"暂存区"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#暂存区"}},[t._v("#")]),t._v(" 暂存区")]),t._v(" "),r("p",[t._v("数据暂时存放的区域。当文件在工作区被 add 后就会存放在暂存区，相当于放入仓库前的检查，如果想要反悔修改还是可以操作的。")]),t._v(" "),r("h2",{attrs:{id:"版本库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#版本库"}},[t._v("#")]),t._v(" 版本库")]),t._v(" "),r("p",[t._v("版本库就是一个本地存放并记录的仓库。数据在暂存区被 commit 提交到仓库中就会产生记录，留下痕迹。只有在 push 的时候才会提交到远程仓库中。")])])}),[],!1,null,null,null);a.default=e.exports}}]);