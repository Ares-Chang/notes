(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{413:function(a,n,t){"use strict";t.r(n);var s=t(26),e=Object(s.a)({},(function(){var a=this,n=a.$createElement,t=a._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("下列命令均在普通模式下进行")]),a._v(" "),t("h2",{attrs:{id:"文档操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文档操作"}},[a._v("#")]),a._v(" 文档操作")]),a._v(" "),t("blockquote",[t("p",[a._v("操作后面跟 ! 为强制执行并抛弃当前未保存操作")])]),a._v(" "),t("p",[a._v(":wq: 退出并保存")]),a._v(" "),t("p",[a._v(":q: 退出")]),a._v(" "),t("p",[a._v(":w: 保存")]),a._v(" "),t("p",[a._v(":e: 重新加载当前文档")]),a._v(" "),t("p",[a._v(":f: 或 ctrl + g 显示文档名，是否修改，和光标位置")]),a._v(" "),t("ul",[t("li",[a._v("新建文件 vim [fileName]")])]),a._v(" "),t("h2",{attrs:{id:"光标移动和配置自定义键位"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#光标移动和配置自定义键位"}},[a._v("#")]),a._v(" 光标移动和配置自定义键位")]),a._v(" "),t("ul",[t("li",[a._v("光标移动")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("h: 左\nj: 下\nk：上\nl：右\n\nw: 移动到下个单词的首字母\nb: 移动到上个单词的首字母\ne: 移动到词尾\n\nH: 移动到这个屏幕最上方第一个字符\nM: 移动到屏幕中间行第一个字符\nL: 移动到屏幕最下方第一个字符\n\nnG: n 为数字,移动到当前文档第几行\ngg: 移动到文件开头\nG: 移动到文件结尾\nn%: 移动到文件 n% 的位置\n\n|: 移动到行首\n0(数字0): 移动到行首\n^(shift + 6): 移动到行首\n$(shift + 4): 移动产行尾\n\n-: 前一行首\n+: 后一行首\n\n%: 匹配括号\n\nctrl + f: 屏幕向下移动一页\nctrl + b: 屏幕向上移动一页\nctrl + d: 屏幕向下移动半页\nctrl + u: 屏幕向上移动半页\nctrl + e: 屏幕向下滚动一行\nctrl + y: 屏幕向上滚动一行\n")])])]),t("ul",[t("li",[a._v("自定义键位")])]),a._v(" "),t("p",[a._v("如果键位不习惯可以通过更改配置文件来实现自定义键位：")]),a._v(" "),t("p",[a._v("cd 进入家目录，新建一个文件夹 "),t("code",[a._v(".vim")]),a._v(" 新建一个文件 "),t("code",[a._v("vimrc")])]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" .vim\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" .vim\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" vimrc\n")])])]),t("p",[a._v("文件内书写自己的 vim 配置文件")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# map 映射键位")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# inoremap 普通模式下更改键位命令")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# nnoremap 命令模式下更改键位命令，")]),a._v("\nnnoremap a b "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这句命令可以理解为把 a 键更改为 b 键，但是旧键并不会被删除")]),a._v("\n")])])]),t("blockquote",[t("p",[a._v("ps: 只使用 map 可能会产生递归问题")])]),a._v(" "),t("ul",[t("li",[a._v("命令组合")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" nore\n\t表示非递归。\n\t递归的映射。其实很好理解，也就是如果键a被映射成了b，c又被映射成了a，如果映射是递归的，那么c就被映射成了b。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" n\n\t表示在普通模式下生效\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" v\n\t表示在可视模式下生效\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" i\n\t表示在插入模式下生效\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" c\n\t表示在命令行模式下生效\n")])])]),t("h2",{attrs:{id:"搜索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搜索"}},[a._v("#")]),a._v(" 搜索")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("/: 向后搜索\n%: 向前搜索\n\nn: 查找下一处\nN: 查找上一处\n\n:nohl: 退出搜索\n")])])]),t("h2",{attrs:{id:"合并下一行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合并下一行"}},[a._v("#")]),a._v(" 合并下一行")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("J: 合并下一行\n")])])]),t("h2",{attrs:{id:"进入写入模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进入写入模式"}},[a._v("#")]),a._v(" 进入写入模式")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("i: 光标前插入\nI: 首插入\n\na: 光标后插入\nA: 尾插入\n\no: 在当前行下一行开启一行新行并进入写入模式\nO: 当前行上一竺开启一行并进入写入模式\n\ns: 删除后一个字符并进入写入模式\nS: 除当前行内容并进入写入模式\n\nc: 修改 删除并进入写入模式\nC: 改至行尾并进入写入模式\n\nr: 替换后一个字符\nR: 入替换模式\n\n## 复制和粘贴\n\ny: 拷贝\nY: 拷贝一行\n\np: 在文字后粘贴\nP: 在文字前粘贴\n")])])]),t("h2",{attrs:{id:"撤销和反撤销"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#撤销和反撤销"}},[a._v("#")]),a._v(" 撤销和反撤销")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("u: 撤销上一步操作相当于 ctrl + z\n\nctrl + r 回退前一个命令，换句话说，它撤销一个撤销\n")])])]),t("h2",{attrs:{id:"缩进和反缩进"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缩进和反缩进"}},[a._v("#")]),a._v(" 缩进和反缩进")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("> : 缩进\n\n<: 反缩进\n\n=: 自动格式化 后面跟执行范围\n")])])]),t("h2",{attrs:{id:"可视模式命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可视模式命令"}},[a._v("#")]),a._v(" 可视模式命令")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("v: 进入可视模式\nV: 进入行可视模式\nctrl + v 进入可视块模式\n\naw 选中一个单词(包含空格)\niw 选中一个单词\n\naW 选中一个字串(包含空格)\niW 选中一个字串\n\nas 选中一个句子(包含空格)\nis 选中一个句子\n\nap 选中一个段落(包含空格)\nip 选中一个段落\n\na( 选中一个()块(包含小括号)\ni( 选中一个()块内容\n\na{ 选中一个{}块(包含大括号)\ni{ 选中一个{}内容\n\na< 选中一个<>块(包含<>)\ni< 选中一个<>块内容\n\na[ 选中一个[]块(包含[])\ni[ 选中一个[]块内容\n\na\" 选中一个双引号字符串内容(包含引号)\ni\" 选中一个双引号客串内容\n\na' 选中一个单引号字符串内容(包含引号)\ni' 选中一个单引号客串内容\n\na` 选中一个反引号字符串(包含引号)\ni` 选中一个反引号字符串内容\n\nu 变成小写\nU 变成大写\n\n- 选中行执行命令\n\n在可视模式下选中行,输入 normal 操作指令 系统会帮你执行这些操作\n")])])]),t("h2",{attrs:{id:"宏录制和使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#宏录制和使用"}},[a._v("#")]),a._v(" 宏录制和使用")]),a._v(" "),t("p",[a._v("q 后面跟一个键位,表示宏要录制到哪个键位上,回车结束设置,然后跟宏要执行的命令,结束操作后 esc 再次点击 q 结束宏录制")]),a._v(" "),t("p",[a._v("@ 后面跟你设置的宏键位,就会执行")]),a._v(" "),t("blockquote",[t("p",[a._v("@ 前面可以设置执行次数,设置多少执行多少次")])]),a._v(" "),t("h2",{attrs:{id:"分割窗口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分割窗口"}},[a._v("#")]),a._v(" 分割窗口")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(":Sex: 水平分割一个窗口,浏览文件系统\n:Vex: 垂直分割一个窗口,浏览文件系统\n\n:split: 上下分屏\n:vsplit: 左右分屏\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);